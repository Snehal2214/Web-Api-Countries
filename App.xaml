<Application
    x:Class="BaseApp.App"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Converters="clr-namespace:WpfHelpers.Resources.Converters;assembly=WpfHelpers"
    xmlns:local="clr-namespace:BaseApp"
    DispatcherUnhandledException="Application_DispatcherUnhandledException">
    <Application.Resources>
        <Converters:InvertValueVisibilityConverter x:Key="InvertValueVisibilityConverter" />
        <Converters:ValueVisibilityConverter x:Key="ValueVisibilityConverter" />
        <Style x:Key="FontAwesome">
            <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/Resources/Fonts/#FontAwesome" />
        </Style>
        <Style x:Key="Roboto">
            <Setter Property="TextElement.FontFamily" Value="pack://application:,,,/Resources/Fonts/#Roboto" />
        </Style>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
        <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="#fff" />
        <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888" />
        <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eee" />
        <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888" />

        <ControlTemplate x:Key="ComboBoxToggleButtonTemplate" TargetType="ToggleButton">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <Border
                    Name="Border"
                    Grid.ColumnSpan="2"
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                    BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                    BorderThickness="1,1,1,1"
                    CornerRadius="0" />
                <Border
                    Name="ButtonBorder"
                    Grid.Column="1"
                    Margin="1,1,1,1"
                    Background="{StaticResource ComboBoxNormalBackgroundBrush}"
                    BorderBrush="#444"
                    BorderThickness="0,0,0,0"
                    CornerRadius="0, 0, 0, 0" />

                <Path
                    Name="Arrow"
                    Grid.Column="1"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
                    Fill="#444" />
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="UIElement.IsMouseOver" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="WhiteSmoke" />
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="WhiteSmoke" />
                    <Setter TargetName="Arrow" Property="Shape.Fill" Value="#FF8D979E" />
                </Trigger>
                <Trigger Property="UIElement.IsEnabled" Value="False">
                    <Setter TargetName="Border" Property="Panel.Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                    <Setter TargetName="ButtonBorder" Property="Panel.Background" Value="{StaticResource ComboBoxDisabledBackgroundBrush}" />
                    <Setter TargetName="ButtonBorder" Property="Border.BorderBrush" Value="{StaticResource ComboBoxDisabledBorderBrush}" />
                    <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                    <Setter TargetName="Arrow" Property="Shape.Fill" Value="#999" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
            <Setter Property="UIElement.SnapsToDevicePixels" Value="True" />
            <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True" />
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
            <Setter Property="ScrollViewer.CanContentScroll" Value="True" />
            <Setter Property="TextElement.Foreground" Value="Black" />
            <Setter Property="Padding" Value="2" />
            <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ComboBox">
                        <Grid>
                            <ToggleButton
                                Name="ToggleButton"
                                Grid.Column="2"
                                ClickMode="Press"
                                Focusable="False"
                                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                Template="{StaticResource ComboBoxToggleButtonTemplate}" />

                            <ContentPresenter
                                Name="ContentSite"
                                Margin="5,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding ComboBox.SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                                IsHitTestVisible="False" />
                            <TextBox
                                Name="PART_EditableTextBox"
                                Margin="3,3,23,3"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="Transparent"
                                Focusable="True"
                                IsReadOnly="{TemplateBinding IsReadOnly}"
                                Visibility="Hidden">
                                <TextBox.Template>
                                    <ControlTemplate TargetType="TextBox">
                                        <Border Name="PART_ContentHost" Focusable="False" />
                                    </ControlTemplate>
                                </TextBox.Template>
                            </TextBox>
                            <!--  Popup showing items  -->
                            <Popup
                                Name="Popup"
                                AllowsTransparency="True"
                                Focusable="False"
                                IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                                Placement="Bottom"
                                PopupAnimation="Slide">
                                <Grid
                                    Name="DropDown"
                                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}"
                                    SnapsToDevicePixels="True">
                                    <Border
                                        Name="DropDownBorder"
                                        Margin="0,1,0,0"
                                        Background="White"
                                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"
                                        BorderThickness="1,1,1,1"
                                        CornerRadius="0" />
                                    <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                                    </ScrollViewer>
                                </Grid>
                            </Popup>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="DropDownBorder" Property="FrameworkElement.MinHeight" Value="50" />
                            </Trigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}" />
                            </Trigger>
                            <Trigger Property="ItemsControl.IsGrouping" Value="True">
                                <Setter Property="ScrollViewer.CanContentScroll" Value="False" />
                            </Trigger>
                            <Trigger Property="ComboBox.IsEditable" Value="True">
                                <Setter Property="KeyboardNavigation.IsTabStop" Value="False" />
                                <Setter TargetName="PART_EditableTextBox" Property="UIElement.Visibility" Value="Visible" />
                                <Setter TargetName="ContentSite" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="CheckStyle" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
                                        Margin="2"
                                        SnapsToDevicePixels="True"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#FF707070" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="checkBoxBorder"
                                Margin="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="markGrid">
                                    <TextBlock
                                        x:Name="optionMark"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        FontSize="22"
                                        Foreground="Green"
                                        Style="{StaticResource FontAwesome}"
                                        Text="&#xf058;" />
                                    <TextBlock
                                        x:Name="unChecked"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        FontSize="22"
                                        Foreground="#b3b3b3"
                                        Style="{StaticResource FontAwesome}"
                                        Text="&#xf05d;" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="unChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="unChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CheckBoxStyle1" TargetType="{x:Type CheckBox}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle
                                        Margin="2"
                                        SnapsToDevicePixels="True"
                                        Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
                                        StrokeDashArray="1 2"
                                        StrokeThickness="1" />
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="BorderBrush" Value="#FF707070" />
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid
                            x:Name="templateRoot"
                            Background="Transparent"
                            SnapsToDevicePixels="True">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Border
                                x:Name="checkBoxBorder"
                                Margin="1"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Background="{TemplateBinding Background}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}">
                                <Grid x:Name="markGrid">
                                    <TextBlock
                                        x:Name="optionMark"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        FontSize="22"
                                        Style="{StaticResource FontAwesome}"
                                        Text="&#xf044;" />
                                    <TextBlock
                                        x:Name="unChecked"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        FontSize="22"
                                        Style="{StaticResource FontAwesome}"
                                        Text="&#xF00D;" />
                                </Grid>
                            </Border>
                            <ContentPresenter
                                x:Name="contentPresenter"
                                Grid.Column="1"
                                Margin="{TemplateBinding Padding}"
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                Content="{TemplateBinding Content}"
                                ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                Focusable="False"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                        </Grid>
                        <ControlTemplate.Triggers>

                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True" />
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Hidden" />
                                <Setter TargetName="unChecked" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="optionMark" Property="Visibility" Value="Visible" />
                                <Setter TargetName="unChecked" Property="Visibility" Value="Hidden" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="MenuButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="4,12" />
            <Setter Property="Background" Value="#222d32" />
            <Setter Property="Foreground" Value="#fff" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Border
                                    Name="dropShadowBorder"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="0"
                                    Visibility="Hidden">
                                    <Border.Background>
                                        <LinearGradientBrush StartPoint="0,0" EndPoint="0,0.16">
                                            <GradientStop Offset="0" Color="#22000000" />
                                            <GradientStop Offset="1" Color="#00000000" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <ContentPresenter
                                    Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--  default button highlight  -->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>

                            <!--  inner drop shadow when pressed / checked  -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dropShadowBorder" Property="Visibility" Value="Visible" />
                                <Setter TargetName="border" Property="Background" Value="#8aa4af" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter TargetName="dropShadowBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.60" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="TransparentButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="FontFamily" Value="Helvetica Neue,Helvetica,Arial,sans-serif" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="4,12" />
            <Setter Property="Background" Value="Transparent" />
            <Setter Property="Foreground" Value="#fff" />
            <Setter Property="BorderThickness" Value="0,0,0,0" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ButtonBase}">
                        <Border
                            Name="border"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="0"
                            SnapsToDevicePixels="True">
                            <Grid>
                                <Border
                                    Name="dropShadowBorder"
                                    Background="Transparent"
                                    BorderBrush="Transparent"
                                    BorderThickness="0"
                                    CornerRadius="0"
                                    Visibility="Hidden" />
                                <ContentPresenter
                                    Name="contentPresenter"
                                    Margin="{TemplateBinding Padding}"
                                    HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                    VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                    Content="{TemplateBinding Content}"
                                    ContentStringFormat="{TemplateBinding ContentStringFormat}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Focusable="False"
                                    RecognizesAccessKey="True"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <!--  default button highlight  -->
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                            </Trigger>

                            <!--  inner drop shadow when pressed / checked  -->
                            <Trigger Property="IsPressed" Value="True">
                                <Setter TargetName="dropShadowBorder" Property="Visibility" Value="Visible" />
                                <Setter TargetName="border" Property="Background" Value="#8aa4af" />
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter TargetName="dropShadowBorder" Property="Visibility" Value="Visible" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter TargetName="border" Property="Opacity" Value="0.60" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<Style TargetType="{x:Type DataGridColumnHeader}">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Padding" Value="6"/>
        </Style>
        <Style TargetType="{x:Type DataGridRow}">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontFamily" Value="Arial"/>
            <Setter Property="Padding" Value="6"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="Padding" Value="8"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Border Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
        <Style x:Key="ViewHeader" TargetType="{x:Type Border}">
            <Setter Property="Background" Value="#222d32" />
        </Style>
        <Style x:Key="ViewBackground" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#fff" />
        </Style>
        <Style x:Key="Label" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="LabelTBLValue" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalAlignment" Value="Left" />
        </Style>
        <Style x:Key="LabelTBXValue" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="VerticalContentAlignment" Value="Center" />
            <Setter Property="VerticalAlignment" Value="Center" />
            <Setter Property="Padding" Value="4,4" />
        </Style>
        <Style x:Key="NormalButton" TargetType="Button">
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Left" />
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Padding" Value="8,4" />
            <Setter Property="BorderThickness" Value="0,0,0,1" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border
                            Margin="5,0"
                            Padding="10,5"
                            Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="White" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Style.Resources>
                <Style TargetType="Border">
                    <Setter Property="CornerRadius" Value="2" />
                </Style>
            </Style.Resources>
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="#1976d2" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#1062b3" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="WhiteButton"
            BasedOn="{StaticResource NormalButton}"
            TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="#f2efef" />
                    <Setter Property="Foreground" Value="#333" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ecefef" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="GreenButton"
            BasedOn="{StaticResource NormalButton}"
            TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="DarkGreen" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="Green" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style
            x:Key="RedButton"
            BasedOn="{StaticResource NormalButton}"
            TargetType="Button">
            <Style.Triggers>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" Value="Gray" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" Value="#960f21" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="#ab2637" />
                    <Setter Property="Foreground" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style BasedOn="{StaticResource NormalButton}" TargetType="Button" />
        <Style x:Key="TabItemStyle" TargetType="TabItem">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="BorderBrush" Value="Pink" />
            <Setter Property="BorderThickness" Value="10" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Border
                            x:Name="PART_Border"
                            Margin="0,0,0,0"
                            Padding="50,0,50,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="Black"
                            BorderThickness="1,1,1,0"
                            CornerRadius="2,2,0,0">
                            <ContentPresenter Margin="5" ContentSource="Header" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Background" Value="#1976d2" />
                                <Setter Property="Foreground" Value="#fff" />
                            </Trigger>

                            <Trigger Property="IsSelected" Value="false">
                                <Setter Property="Background" Value="#fff" />
                                <Setter Property="Foreground" Value="#323436" />

                            </Trigger>
                        </ControlTemplate.Triggers>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Viewbox>
                            <Border
                                x:Name="Border"
                                Width="40"
                                Height="20"
                                Background="#FFFFFFFF"
                                CornerRadius="10">
                                <Border.Effect>
                                    <DropShadowEffect
                                        Direction="0"
                                        Opacity="0.3"
                                        ShadowDepth="0.5" />
                                </Border.Effect>
                                <Ellipse
                                    x:Name="Ellipse"
                                    Margin="2,1,2,1"
                                    HorizontalAlignment="Stretch"
                                    Fill="#FFFFFFFF"
                                    Stretch="Uniform"
                                    Stroke="Gray"
                                    StrokeThickness="0.2">
                                    <Ellipse.Effect>
                                        <DropShadowEffect
                                            BlurRadius="10"
                                            Direction="260"
                                            Opacity="0.3"
                                            ShadowDepth="1" />
                                    </Ellipse.Effect>
                                </Ellipse>
                            </Border>
                        </Viewbox>
                        <ControlTemplate.Triggers>
                            <EventTrigger RoutedEvent="Checked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="#FF4CD661"
                                            Duration="0:0:0.1" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Ellipse"
                                            Storyboard.TargetProperty="Margin"
                                            To="20 1 2 1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                            <EventTrigger RoutedEvent="Unchecked">
                                <BeginStoryboard>
                                    <Storyboard>
                                        <ColorAnimation
                                            Storyboard.TargetName="Border"
                                            Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                            To="White"
                                            Duration="0:0:0.1" />
                                        <ThicknessAnimation
                                            Storyboard.TargetName="Ellipse"
                                            Storyboard.TargetProperty="Margin"
                                            To="2 1 2 1"
                                            Duration="0:0:0.1" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </EventTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="MessageBoxTitle" TargetType="{x:Type Label}">
            <Setter Property="FontSize" Value="18" />
            <Setter Property="Margin" Value="0,5,0,5" />
            <Setter Property="FontWeight" Value="Bold" />
        </Style>
        <Style x:Key="MessageBoxDescription" TargetType="{x:Type TextBlock}">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="MessageBoxTitleBottomBorder" TargetType="{x:Type Border}">
            <Setter Property="BorderBrush" Value="#aeaeae" />
            <Setter Property="BorderThickness" Value="1" />
        </Style>

        <Style x:Key="MessageBoxInput" TargetType="{x:Type TextBox}">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style
            x:Key="MessageBoxCancel"
            BasedOn="{StaticResource NormalButton}"
            TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style
            x:Key="MessageBoxNo"
            BasedOn="{StaticResource NormalButton}"
            TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="Red" />
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style
            x:Key="MessageBoxYes"
            BasedOn="{StaticResource NormalButton}"
            TargetType="{x:Type Button}">
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Background" Value="Green" />
            <Setter Property="Foreground" Value="White" />
        </Style>

    </Application.Resources>
</Application>
